# name: Build image and execute CI tests
# 
# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]
# 
# jobs:
#   build-and-push-main-test-docker-image:
#     runs-on: ubuntu-latest
#     steps:
#       -
#         name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
#       -
#         name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       -
#         name: Build and push
#         uses: docker/build-push-action@v5
#         with:
#           pull: true
#           push: true
#           tags: ${{ vars.DOCKER_IMAGE_REPOSITORY }}:${{ vars.DOCKER_IMAGE_MAIN_STAGE }}-test
#           target: ${{ vars.DOCKER_IMAGE_MAIN_STAGE }}
# 
#   build-and-push-dev-test-docker-image:
#     runs-on: ubuntu-latest
#     steps:
#       -
#         name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
#       -
#         name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}
#       -
#         name: Build and push
#         uses: docker/build-push-action@v5
#         with:
#           pull: true
#           push: true
#           tags: ${{ vars.DOCKER_IMAGE_REPOSITORY }}:${{ vars.DOCKER_IMAGE_DEV_TESTS_STAGE }}-test
#           target: ${{ vars.DOCKER_IMAGE_DEV_TESTS_STAGE }}
# 
#   main-tests:
#     needs: build-and-push-main-test-docker-image
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash
#     container:
#       image: ${{ vars.DOCKER_IMAGE_REPOSITORY }}:${{ vars.DOCKER_IMAGE_MAIN_STAGE }}-test
#       env:
#         HSL_API_KEY: ${{ secrets.HSL_API_KEY }}
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       # - run: ./execute_tests.py robot-tests
#       # - run: ./execute_tests.py pytest-tests
# 
# 
#   dev-tests:
#     needs: build-and-push-dev-test-docker-image
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash
#     container:
#       image: ${{ vars.DOCKER_IMAGE_REPOSITORY }}:${{ vars.DOCKER_IMAGE_DEV_TESTS_STAGE }}-test
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
#       # - run: robotidy --diff --check hsl-api/tests/robot
#       # - run: robocop hsl-api/tests/robot
#       - run: ruff check --no-cache --exclude .vscode-server
#       - run: ruff format --no-cache --exclude .vscode-server --diff
#       - run: shellcheck ./*.sh
#       - run: hadolint Dockerfile
#       - run: |
#           pip-compile -o requirements_new.txt requirements.in > /dev/null 2>&1
#           diff --brief <(grep -v '#' requirements.txt) <(grep -v '#' requirements_new.txt)
#       - run: |
#           pip-compile -o requirements-dev_new.txt requirements-dev.in > /dev/null 2>&1
#           diff --brief <(grep -v '#' requirements-dev.txt) <(grep -v '#' requirements-dev_new.txt)
